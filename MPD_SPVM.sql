/*
22 Novembre 
Simona Bronevitsky 11316059 Yihan Hu 11330613 Jules Lemee 11303810
Le projet consiste à créer et exécuter des requêtes sur la base de données du SPVM pour analyser 
les données d'interventions et générer des rapports. Cela permet d'identifier des tendances, 
d'optimiser la prise de décision, et d'améliorer la gestion des ressources.
*/

DROP DATABASE IF EXISTS SPVM;
CREATE DATABASE SPVM;

USE SPVM;

-- we will first create the tables with no foreign key references to avoid conflicts

DROP TABLE IF EXISTS GENRE;
CREATE TABLE GENRE
(
    ID_GENRE INT PRIMARY KEY,
    CODE INT NOT NULL,
    DÉSIGNATION NVARCHAR(50) NOT NULL,
    SALUTATION NVARCHAR(50),
    ABRÉVIATION NVARCHAR(50)
);

DROP TABLE IF EXISTS CATÉGORIE_INTERVENTION;
CREATE TABLE CATÉGORIE_INTERVENTION
(
    ID INT PRIMARY KEY,
    LIBELLÉ NVARCHAR(50) NOT NULL,
    [DESCRIPTION] NVARCHAR(100) NOT NULL
);

DROP TABLE IF EXISTS QUART_TRAVAIL;
CREATE TABLE QUART_TRAVAIL
(
    ID INT PRIMARY KEY,
    LIBELLÉ NVARCHAR(50) NOT NULL,
    HEURE_DÉBUT NVARCHAR(50) NOT NULL,
    HEURE_FIN NVARCHAR(50) NOT NULL
);

DROP TABLE IF EXISTS TYPE_RUE;
CREATE TABLE TYPE_RUE
(
    ID INT PRIMARY KEY,
    ABRÉVIATION NVARCHAR(50) NOT NULL,
    DÉSIGNATION NVARCHAR(50) NOT NULL
);

DROP TABLE IF EXISTS POINT_CARDINAL;
CREATE TABLE POINT_CARDINAL
(
    ID INT PRIMARY KEY,
    ABRÉVIATION NVARCHAR(50) NOT NULL,
    DIRECTION NVARCHAR(50) NOT NULL
);

DROP TABLE IF EXISTS TYPE_UNITÉ;
CREATE TABLE TYPE_UNITÉ
(
    ID INT PRIMARY KEY,
    ABRÉVIATION NVARCHAR(50) NOT NULL,
    NOM NVARCHAR(50) NOT NULL
);

-- now we can create tables that have foriegn key references to tables we've just created (a "second layer" if you will)

DROP TABLE IF EXISTS INTERVENTION;
CREATE TABLE INTERVENTION
(
    ID_INTERVENTION INT PRIMARY KEY
    ID_CATÉGORIE INT NOT NULL FOREIGN KEY REFERENCES CATÉGORIE_INTERVENTION(ID),
    DATE_INCIDENT DATE NOT NULL,
    ID_QUART_TRAVAIL INT NOT NULL FOREIGN KEY REFERENCES QUART_TRAVAIL(ID)
);

DROP TABLE IF EXISTS ADRESSE;
CREATE TABLE ADRESSE
(
    ID_ADRESSE INT PRIMARY KEY,
    NO_CIVIQUE INT NOT NULL,
    TYPE_RUE_ID INT NOT NULL  FOREIGN KEY REFERENCES TYPE_RUE(ID),
    NOM NVARCHAR(50) NOT NULL,
    PRÉPOSITION NVARCHAR(50),
    POINT_CARDINAL_ID INT FOREIGN KEY REFERENCES POINT_CARDINAL(ID),
    UNITÉ NVARCHAR(50),
    TYPE_UNITÉ_ID INT FOREIGN KEY REFERENCES TYPE_UNITÉ(ID),
    CODE_POSTAL NVARCHAR(50) NOT NULL
);

-- a "third layer"

DROP TABLE IF EXISTS POSTE_DE_QUARTIER;
CREATE TABLE POSTE_DE_QUARTIER
(
    ID_PDQ INT PRIMARY KEY,
    ID_ADDRESSE INT FOREIGN KEY REFERENCES ADDRESS(ID_ADDRESSE)
);

-- a "fourth layer"

DROP TABLE IF EXISTS COUVERTURE;
CREATE TABLE COUVERTURE
(
    ID_COUVERTURE INT PRIMARY KEY,
    ID_PDQ INT FOREIGN KEY REFERENCES POSTE_DE_QUARTIER(ID_PDQ),
    NOM NVARCHAR(50) NOT NULL    
);

DROP TABLE IF EXISTS AGENT;
CREATE TABLE AGENT
(
    MATRICULE INT PRIMARY KEY,
    GENRE INT NOT NULL FOREIGN KEY REFERENCES GENRE(ID_GENRE),
    PRÉNOM NVARCHAR(50) NOT NULL,
    NOM NVARCHAR(50) NOT NULL,
    PDQ INT NOT NULL FOREIGN KEY REFERENCES POSTE_DE_QUARTIER(ID_PDQ),
);

-- our "fifth layer"

DROP TABLE IF EXISTS INTERVENTION_AGENT;
CREATE TABLE INVERVENTION_AGENT
(
    MATRICULE_AGENT INT PRIMARY KEY REFERENCES AGENT(MATRICULE),
    ID_INTERVENTION INT PRIMARY KEY REFERENCES INTERVENTION(ID_INTERVENTION),
    EST_RAPPORTEUR NVARCHAR(50)
);

DROP TABLE IF EXISTS DIVISION_ADMINISTRATIVE;
CREATE TABLE DIVISION_ADMINISTRATIVE 
(
    ID_DIVISION INT PRIMARY KEY REFERENCES QUARTIER(ID_DIVISION) ,
    ID_ADRESSE INT NOT NULL FOREIGN KEY REFERENCES ADRESSE(ID_ADRESSE),
);

-- "sixth layer"

DROP TABLE IF EXISTS QUARTIER;
CREATE TABLE QUARTIER 
( 
    NUM_QUARTIER INT PRIMARY KEY REFERENCES COUVERTURE(ID_COUVERTURE),
    ID_DIVISION INT NOT NULL FOREIGN KEY REFERENCES DIVISION_ADMINISTRATIVE(ID_DIVISION) ,
    NB_LOGEMENTS INT,
);

DROP TABLE IF EXISTS VILLE;
CREATE TABLE VILLE
(
    ID_VILLE INT PRIMARY KEY REFERENCES DIVISION_ADMINISTRATIVE(ID_DIVISION),
    [POPULATION] INT NOT NULL,
    NB_LOGEMENTS INT,
    SUPERFICIE_TERRESTRE FLOAT NOT NULL,
);

-- "seventh and final layer"

DROP TABLE IF EXISTS ARRONDISSEMENT;
CREATE TABLE ARRONDISSEMENT 
(
    ID_ARONDISSEMENT INT PRIMARY KEY REFERENCES DIVISION_ADMINISTRATIVE(ID_DIVISION),
    ID_VILLE INT NOT NULL FOREIGN KEY REFERENCES VILLE(ID_VILLE),
    PERIMETRE FLOAT,
    SUPERFICIE FLOAT,
);

DROP TABLE IF EXISTS ENTITÉ;
CREATE TABLE ENTITÉ 
(
    ID_ENTITÉ INT PRIMARY KEY  REFERENCES DIVISION_ADMINISTRATIVE(ID_DIVISION),
    ID_VILLE INT NOT NULL FOREIGN KEY REFERENCES VILLE(ID_VILLE),
    [DESCRIPTION] NVARCHAR(100) NOT NULL,
    NOM_CODE NVARCHAR(50) NOT NULL,
);

